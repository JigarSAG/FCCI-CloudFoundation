#!/usr/bin/env groovy

pipeline 
{
    agent any 
    environment 
	{
	// initialize the variables
		branch="${branchName}"
		apis = ""		
 	}

    stages 
	{
	 stage('Initialize Repo')
	  {  
	   steps 
		{
		  script {
			iPaasEnv = "wmioINT"
			wmioenv = "DEV"
			echo "${iPaasEnv}"

			
			source_environment_hostname = sh ( returnStdout: true, script: '''cat configs/wmioINT/DEV.yml | grep -i hostname | cut -d '"' -f2 ''' ).trim()
			source_environment_port = sh ( returnStdout: true, script: '''cat configs/wmioINT/DEV.yml | grep -i port | cut -d '"' -f2 ''' ).trim()
			admin_user = sh ( returnStdout: true, script: '''cat configs/wmioINT/DEV.yml | grep -i admin_username | cut -d '"' -f2 ''' ).trim()
			source_type = sh ( returnStdout: true, script: '''cat configs/wmioINT/DEV.yml | grep -i type | cut -d '"' -f2 ''' ).trim()
			//repo_user = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/repo.yml | grep -i user | cut -d '"' -f2 ''' ).trim()
			LOCAL_DEV_URL = "https://${source_environment_hostname}:${source_environment_port}"
        //    onprem_user = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/onprem.yml | grep -i onprem_username | cut -d '"' -f2 ''' ).trim()  
        //    onprem_pwd = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/onprem.yml | grep -i onprem_pwd | cut -d '"' -f2 ''' ).trim() 
        //    onpremurl = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/onprem.yml | grep -i onprem_url | cut -d '"' -f2 ''' ).trim()
        //    onpremport = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/onprem.yml | grep -i onprem_prt | cut -d '"' -f2 ''' ).trim()
        //    inturl="${onpremurl}:${onpremport}"
		
			repo_user="JigarBharat.Shah@Softwareag.com"
			onprem_user="Administrator"
			onprem_pwd="manage"
			inturl="http://SAG-FMJB2F3:5401"
			}
			
		echo "${source_environment_hostname}"
		echo "${source_environment_port}"
    	echo "${admin_user}"
		echo "${source_type}"
		echo "${repo_user}"
        echo "${onprem_user}"
		echo "${onprem_pwd}"
		echo "${inturl}"
		
		}
	   }
	
	
	stage('Export Projects')
	 {
         steps {
		            sh 'pwd'
		            sh 'ls -lrt'

		            
                      		echo "Start exporting the project"
						script{
                            
							env.premurl=inturl
							echo "on-prem url is : ${premurl}"
							
							env.ioIntUrl=LOCAL_DEV_URL
							echo "io INT url is : ${ioIntUrl}"

			                dir('FCCI-CloudFoundation')
							{ 
		   			        sh 'pwd'
	   	   			        sh 'ls -ltr' 		
								echo "checkout"
							script {
								git branch: 'DEV',
								credentialsId: 'webm_credentials',
								url: 'https://github.com/JigarSAG/FCCI-CloudFoundation.git'

								sh "ls -lat"
				                	}
							
							
								if ("${projectName}" == '')
								{
									echo "Project name is not given"
                                	exit 0
								}
                            	else
								{
								echo "Project name is ${projectName}"
								
								sh '''
								echo $(pwd)
								echo $premurl

								cd export
								echo $(pwd)
								echo $(ls -lrt)

                               					cd project
								echo $(pwd)
								echo $(ls -lrt)

								echo ${ioIntUrl}
								echo ${premurl}

                        			importedName=$(curl --location --request POST 'https://fccipdv.int-aws-us.webmethods.io/apis/v1/rest/projects/test_audit/export' \
											--header 'Authorization: Basic UERWU2VydmljZTpNemRaUFoyTFR4cHRZWSNnMTExZjIzODc0bmtzZGY1JWdzZGJm')

						download_link=$(echo "$importedName" | grep -o '"download_link":"[^"]*' | grep -o '[^"]*$')

						echo download_link
						##curl --location "$download_link" --output ${projectName}.zip -H 'Content-Type:application/json' -H 'x-HTTP-Method-Override:GET'
						curl --location --request GET 'https://wfapi-int-prod-01.s3.us-west-2.amazonaws.com/export-fl0eeead976cdc6e46ddd3f4-1708534379618.zip?AWSAccessKeyId=ASIA2JVTXLELKWBRIM3O&Expires=1708534979&Signature=gy7pNoxPmwIDck6UBpTpJidar84%3D&x-amz-security-token=IQoJb3JpZ2luX2VjEGEaCXVzLXdlc3QtMiJIMEYCIQCP3rYtEWoRcyDMnPYhYOC%2BZl6x4ItJd2Uz6f2w%2B1kmkwIhANSk4SeYNlN1wmGjOozey8%2FIkBGiOSgD1xn4hSVcO%2B07KoQFCEoQAhoMNzA3OTcyNzgyMzU4IgxPg%2B0yPRANRZhqiNcq4QRiWYNL2ud6ZZ%2B4EqxoTyUUMJG7EOGG8nIdPh%2BUaIgsS5xhu11EhVmVFipH0qIiV4L2zBka3p5ELVchnoibBMkSS7wu%2FaK2QHjF7XZSE6qRs2%2BShyUkJW7cH1Zlol%2Bhdf6Ffz34pOfTJ%2FWecgWXOUvtnFJsY9JF5NQssLsGTAcoo8HTVmAL2otMFrQn35yL6%2FsIWJnDgO4OGcF1ih2LvsXBHPeSCUQMBgM%2BoYZ2Lckcm3A8sH7jwvdvsvTDJHChM3UFkN6EIwYX4N1jrscrrmH7lMfkEs7yWBMNsPpiHJ9UzjLYyRGuyj%2FmWy1cDiFLLx5haDlXAlSioVHfWok2Qvgh%2F6ZZuf7sTxR1b5S%2B87tA7m97Vl%2Fi3ICUrBkGANh%2FVyWF9QQ3k9HnOfO8IFOWvtHhVYuQtCVLMkTZ3AgyXrLE3htGBRV8aPUofRRkwQ6oo8pGEOJaMaqUfA%2FL9Mu7iJBsSMYMQk3Cx8Z9PbEW%2B3VTskaKh40qPQ4WTsAa2UoigkI4bXktAB96eaoAupdGpFskP3ieVtk4oEn7Ppmg%2FnWBoQGhdwp%2BvFkOCSN61gi%2FPpeQO30T59iBC9TMaIJHYMvopha3g422x6VOWP2TSvQ2XjqG6rI535BIj2krx8WKBFg4mcsr4Gaqh1Q3KgmkBKZM04cM2WfOVHPU%2FqV1k9eFDi1Ryh7zolYi66hTZ3NSV3uLwjyniMAfJwUNQkEY53AIJfqrZSE36Ptz%2FSV87eD9ljGc5ycQaVpCZhnp0IPVkTosfoIF61OzLMx%2BrFFsxajniZuSXW1AOXZNx3IfdSBq0Scw69TYrgY6mgHx7NsUktuOxUbdikkhW4U%2ByRokdBqVIAmDG%2BwFMYSfG4UKFZErbTezDBzDT5TErHrgiH63BDMPZ%2FV6JWfv%2F%2FTpYV%2FWmEd6b44Hy%2Fp0ubUhU24Ty9mcNL0rN8HxPmJKEH%2B1XvBF8kH78T2WOvJkPRjrHbGnUSfu0oOW8hRcxx5MZgMJW%2F1NDwJloeTBpvolubxmfGW8sHrm4XHq' --output ${projectName}.zip

						ls -lrt
						echo "${projectName}".zip
						cat  "${projectName}".zip | wc -l

						projContent=$(cat  "${projectName}".zip | wc -l)
						#projContent=$(zcat < "${projectName}".zip | grep -o '"statusofproject":"[^"]*' | grep -o '[^"]*$')
						echo $projContent
						
						##if [ ! -z "$projContent" ];   then
						 if [ $projContent -eq 2 ];   then
							echo "Export failed" 
							rm ${projectName}.zip
							ls -lrt
							exit 1

						else

							echo "Export Succeeded"
							ls -lrt
						
						fi


								echo "Export Succeeded"
								echo "Check-in the file"
								
								echo $(pwd)
								echo $(ls -lrt)

								git add $projectName.zip
								git config --global user.name "shilpm2"
                				git config --global user.email "shilpm2@locahost.com"
               					

                				git commit -m "Add $projectName to repo"
								
								sh '''

                				withCredentials([gitUsernamePassword(credentialsId: 'JigarSAG', gitToolName: 'Default')]) {
                    						sh "git push -u origin DEV"
								}
							
								}
							//sh 'chmod +x ../scripts/*.sh'
				//sh "source ../scripts/export_API.sh; export_api '${apiName}' '${wmioapi_url}' '${admin_user}' '${admin_password}' "
						                       

						}
					}                     
				
		}
	}	
 }
 }
