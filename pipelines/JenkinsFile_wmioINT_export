#!/usr/bin/env groovy

pipeline 
{
    agent any 
    environment 
	{
	// initialize the variables
		branch="${branchName}"
		apis = ""		
 	}

    stages 
	{
	 stage('Initialize Repo')
	  {  
	   steps 
		{
		  script {
			iPaasEnv = "wmioINT"
			wmioenv = "DEV"
			echo "${iPaasEnv}"

			
			source_environment_hostname = sh ( returnStdout: true, script: '''cat configs/wmioINT/DEV.yml | grep -i hostname | cut -d '"' -f2 ''' ).trim()
			source_environment_port = sh ( returnStdout: true, script: '''cat configs/wmioINT/DEV.yml | grep -i port | cut -d '"' -f2 ''' ).trim()
			admin_user = sh ( returnStdout: true, script: '''cat configs/wmioINT/DEV.yml | grep -i admin_username | cut -d '"' -f2 ''' ).trim()
			source_type = sh ( returnStdout: true, script: '''cat configs/wmioINT/DEV.yml | grep -i type | cut -d '"' -f2 ''' ).trim()
			//repo_user = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/repo.yml | grep -i user | cut -d '"' -f2 ''' ).trim()
			LOCAL_DEV_URL = "https://${source_environment_hostname}:${source_environment_port}"
        //    onprem_user = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/onprem.yml | grep -i onprem_username | cut -d '"' -f2 ''' ).trim()  
        //    onprem_pwd = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/onprem.yml | grep -i onprem_pwd | cut -d '"' -f2 ''' ).trim() 
        //    onpremurl = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/onprem.yml | grep -i onprem_url | cut -d '"' -f2 ''' ).trim()
        //    onpremport = sh ( returnStdout: true, script: '''cat configs/${iPaasEnv}/onprem.yml | grep -i onprem_prt | cut -d '"' -f2 ''' ).trim()
        //    inturl="${onpremurl}:${onpremport}"
		
			repo_user="JigarBharat.Shah@Softwareag.com"
			onprem_user="Administrator"
			onprem_pwd="manage"
			inturl="http://SAG-FMJB2F3:5401"
			}
			
		echo "${source_environment_hostname}"
		echo "${source_environment_port}"
    	echo "${admin_user}"
		echo "${source_type}"
		echo "${repo_user}"
        echo "${onprem_user}"
		echo "${onprem_pwd}"
		echo "${inturl}"
		
		}
	   }
	
	
	stage('Export Projects')
	 {
         steps {
		            sh 'pwd'
		            sh 'ls -lrt'

		            
                      		echo "Start exporting the project"
						script{
                            
							env.premurl=inturl
							echo "on-prem url is : ${premurl}"
							
							env.ioIntUrl=LOCAL_DEV_URL
							echo "io INT url is : ${ioIntUrl}"

			                dir('FCCI-CloudFoundation')
							{ 
		   			        sh 'pwd'
	   	   			        sh 'ls -ltr' 		
								echo "checkout"
							script {
								git branch: 'DEV',
								credentialsId: 'webm_credentials',
								url: 'https://github.com/JigarSAG/FCCI-CloudFoundation.git'

								sh "ls -lat"
				                	}
							
							
								if ("${projectName}" == '')
								{
									echo "Project name is not given"
                                	exit 0
								}
                            	else
								{
								echo "Project name is ${projectName}"
								
								sh '''
								echo $(pwd)
								echo $premurl

								cd export
								echo $(pwd)
								echo $(ls -lrt)

                               					cd project
								echo $(pwd)
								echo $(ls -lrt)

								echo ${ioIntUrl}
								echo ${premurl}

                        		##curl --location 'http://msplwa118.corp.medtronic.com:5555/restv2/test.resources:concat/callUrl?##projectName=CID_Demo&ioUrl=https%3A%2F%2Fmedtronicdevus.int-aws-us.webmethods.io' --header 'Authorization: Basic ##QWRtaW5pc3RyYXRvcjptYW5hZ2U=' --data ''
								##restv2/mdt_exportproject.resources:exportProject

		                ##curl --location "$premurl/restv2/mdt_exportproject.resources:exportProject/exportProject?projectName=$projectName&ioUrl=$ioIntUrl&ioenv=$wmioenv" --output ${projectName}.zip -H 'Content-Type:application/json' -H 'x-HTTP-Method-Override:GET'
						
						importedName=$(curl --location --request POST 'https://fccipdv.int-aws-us.webmethods.io/apis/v1/rest/projects/test_audit/export' \
											--header 'Authorization: Basic UERWU2VydmljZTpNemRaUFoyTFR4cHRZWSNnMTExZjIzODc0bmtzZGY1JWdzZGJm')
						echo importedName
						curl --location "https://wfapi-int-prod-01.s3.us-west-2.amazonaws.com/export-fl0eeead976cdc6e46ddd3f4-1708501793372.zip?AWSAccessKeyId=ASIA2JVTXLELHZ3KDCSN&Expires=1708502393&Signature=jW2woBeTB7BKsu7nU%2B1E1xlhDEY%3D&x-amz-security-token=IQoJb3JpZ2luX2VjEFgaCXVzLXdlc3QtMiJIMEYCIQCwRkoWkyoHo7IEAKUX7a%2BGFsi1hw2L%2F7soKl8egShn8wIhAJTHRexUR0kZOJIqqxaRET0x0qe2WRnic786ykbLFzMsKoQFCEEQAhoMNzA3OTcyNzgyMzU4IgyO2ILfGMtangtnEwoq4QQz7vnYZVWV7i184ZU1rCzWGqqmPGHLQprAB5H%2BuEfZZlBP7q2YC4YBD2yBlr3rUxqgrIcNXW5QoZ1FC01bGKXF%2FqxQh4GASHFrkWgoXIslxOTidjvbFWu3iwKnsfLMzk%2Be4ud1TST7%2FAlHOu81spqL%2FG%2Bt4MmB9CIEXMuQcndVj2Mxr2k%2Bfwkk38zq%2FKR4ZAZnwwyJtzD3gJMdAQW0nsMmhSznGlUk8qHO%2FAumcYrOC9%2B%2BzKNwxeaPALNwhPuY0drKEdX2OO%2Br6ppiFTffnNZPb1iLFWG9I34DiHPcDQ97i7SH4BF%2FVzwCZMuBp6MDgjBhSpA7Hzc036JeIieQeMvfC396CGdiZajsK8FsuyxFShq2lCB8BSYCzy0m7FD3h%2BDzrlUsxwSlmc4F8s864LvIhc3ahY5PF6CvdovAz%2F41nH%2FdyznqaVtU07HzHtJm5M5xL7B08yaBBj1bz8F%2F3HGc4NqIbTBtwxkj%2FiRr4ALi1QWqETJdl37%2FugR2WCZlnSIVbmyJTOjV5oQna%2B6T0xOjJTKFvthIjMXbTf9dcaaYC6%2Fj5JKKBy3oO8n1WIstaSicxy5QNdeXUOlfW45PrZSCfGhCpso2xELpfu3vJzzZ1Lx06LC3IfdrkJ90T6Sha8EgteTZeVyLQ9lOY7w%2F0iasamE5ILTxYwLpG1qhsSdR7DxfHklUmoLup64A%2F6CUCVbH6hapxQRNjSU9XgEdK1wiFBTf06TkEgdYtHd1qDpjBftkBYJ81BeLBQk4eUnnPVe2D7T2jkVxU6ZlWDM2WEezeloDNCcNM5Gw01%2FsQgh9zbwwodbWrgY6mgE0UHbuVsxjGsW6yEnJoxq9lZ7uJACRuFwKQ8UyIu6svKV4jrjIUkZp258ymeR%2Bv6dCcuzEbtO9VhejlkH7ayJUhDOimFA6kYslgvLlCeC5uKJ5ObYe8I0UtooA%2B8zTy9GVNk1MREK%2BCu3bD9CArdY7PVxIzfPxoaWmq%2BbV%2Fo6ozpq6Mez7Ea2y%2F%2FIcpEP3uFF9oCqiMHLuLOCe" --output ${projectName}.zip -H 'Content-Type:application/json' -H 'x-HTTP-Method-Override:GET'

						ls -lrt
						echo "${projectName}".zip
						cat  "${projectName}".zip | wc -l

						projContent=$(cat  "${projectName}".zip | wc -l)
						#projContent=$(zcat < "${projectName}".zip | grep -o '"statusofproject":"[^"]*' | grep -o '[^"]*$')
						echo $projContent
						
						##if [ ! -z "$projContent" ];   then
						 if [ $projContent -eq 2 ];   then
							echo "Export failed" 
							rm ${projectName}.zip
							ls -lrt
							exit 1

						else

							echo "Export Succeeded"
							ls -lrt
						
						fi


								echo "Export Succeeded"
								echo "Check-in the file"
								
								echo $(pwd)
								echo $(ls -lrt)

								git add $projectName.zip
								git config --global user.name "shilpm2"
                				git config --global user.email "shilpm2@locahost.com"
               					

                				git commit -m "Add $projectName to repo"
								
								sh '''

                				withCredentials([gitUsernamePassword(credentialsId: 'JigarSAG', gitToolName: 'Default')]) {
                    						sh "git push -u origin DEV"
								}
							
								}
							//sh 'chmod +x ../scripts/*.sh'
				//sh "source ../scripts/export_API.sh; export_api '${apiName}' '${wmioapi_url}' '${admin_user}' '${admin_password}' "
						                       

						}
					}                     
				
		}
	}	
 }
 }
