#!/usr/bin/env groovy

pipeline {
    agent any


    stages 
    {
        stage('Initialize Repo')
	  {  
	   steps 
		{
		  echo "----------------------------------Start Initialize Repo----------------------------------"
		  
		  script {
				source_environment_hostname = sh ( returnStdout: true, script: '''cat configs/wmioINT/QA.yml | grep -i hostname | cut -d '"' -f2 ''' ).trim()
				source_environment_port = sh ( returnStdout: true, script: '''cat configs/wmioINT/QA.yml | grep -i port | cut -d '"' -f2 ''' ).trim()
				targetIoURL = "https://${source_environment_hostname}:${source_environment_port}"        
			}
			
			echo "${source_environment_hostname}"
			echo "${source_environment_port}"
			echo "${targetIoURL}"
		}
	   }

        stage("Checkout Repository") 
        {
            steps 
            {
                echo "checkout repo"
                script{
                            
							env.inturl=targetIoURL
                            echo "io url is ${inturl}"
                            
                    dir('FCCI-CloudFoundation-import')
		 			{ 
		   			sh 'pwd'
	   	   			sh 'ls -ltr' 	
				
						script {
									git branch: 'DEV',
									credentialsId: 'JigarSAG',
									url: 'https://github.com/JigarSAG/FCCI-CloudFoundation.git'
									sh "ls -lat"
				            }
                
                        echo "check if project zip exists in repo"

                        sh '''
                        echo $(pwd)

                        cd export
						echo $(pwd)
						echo $(ls -lrt)

						cd project
						echo $(pwd)
						echo $(ls -lrt)
                        
                        
                        echo "checking if project file exists in repo"
                        
                       ## fileexist = ls | grep ${ProjectName}.zip

                       FILE=./${ProjectName}.zip
                        echo "proj exists ${fileexist}"

                
                    pwd
                    ls -lrt
                

                     if [ -f "$FILE" ]; then
                    
                    
                    echo "project file exists, starting to import..."

                    curl -v --location $inturl/apis/v1/rest/project-import \
						--header 'Authorization: Basic Y2lzZXJ2aWNlcHFhOkNMZVZuVnthcjlVUEZOKVleeTM3Z2hzZGYzMjc2VTIzYQ==' \
                        --form project=@${ProjectName}.zip \
                        --form new_project_name=${ProjectName}
				
                    
                    echo "Project imported successfully: ${ProjectName}"
                    
                    else
                    
                        echo "No file found to import for project ${ProjectName}"
                    fi
                    sh '''
                    

            }
            }

            }
        }

    }
}
